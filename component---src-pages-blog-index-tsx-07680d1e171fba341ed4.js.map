{"version":3,"file":"component---src-pages-blog-index-tsx-07680d1e171fba341ed4.js","mappings":"mLAwEA,MAjDkCA,IAAgC,IAA/B,UAAEC,EAAS,WAAEC,GAAY,EAC1D,MAAM,OAAEC,IAAWC,EAAAA,EAAAA,IAAc,cAkB3BC,EAAcC,EAAAA,SAClB,IAAML,GAAcE,EAAOI,MAAMC,OAASP,EAAaE,EAAOI,MAAME,MAAM,EAAGR,GAAaE,EAAOI,OACjG,CAACJ,EAAQF,IAGX,OACEK,EAAAA,cAAAA,EAAAA,SAAAA,KAEID,EAAYK,KAAIC,KAAUT,GAAcA,IAAeS,EAAKC,KAC1DN,EAAAA,cAAAA,UAAAA,CAASO,IAAKF,EAAKC,IACjBN,EAAAA,cAAAA,KAAAA,CAAIQ,UCjDM,gCDkDRR,EAAAA,cAACS,EAAAA,GAAI,CAACC,GAAE,SAAWL,EAAKM,YAAYC,MACjCP,EAAKM,YAAYE,QAGtBb,EAAAA,cAAAA,IAAAA,CAAGQ,UCxDU,mCDwDsBH,EAAKS,SACxCd,EAAAA,cAAAA,IAAAA,CAAGQ,UCxDO,gCDwDsBH,EAAKM,YAAYI,SAI9B,IAAvBhB,EAAYG,QACZF,EAAAA,cAAAA,KAAAA,KAAI,qBAEJJ,GAAqC,IAAvBG,EAAYG,QAC1BF,EAAAA,cAAAA,KAAAA,KAAI,yBAEL,C,+EEtCP,MAtBsCN,IAAAA,IAAC,SAAEsB,GAAU,SACjDhB,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,SAAAA,CAAQQ,UCJY,oCDKlBR,EAAAA,cAAAA,MAAAA,CAAKQ,UCJkB,yCDKrBR,EAAAA,cAACS,EAAAA,GAAI,CAACC,GAAG,KAAIV,EAAAA,cAAAA,IAAAA,CAAGQ,UCPH,iCDO8B,oBAC3CR,EAAAA,cAACS,EAAAA,GAAI,CAACC,GAAG,KAAI,SACbV,EAAAA,cAACS,EAAAA,GAAI,CAACC,GAAG,SAAQ,UAGrBV,EAAAA,cAAAA,OAAAA,CAAMQ,UCfoB,0CDgBxBR,EAAAA,cAAAA,MAAAA,CAAKQ,UCjBU,iCDkBZQ,IAGLhB,EAAAA,cAAAA,SAAAA,CAAQQ,UCnBQ,gCDoBdR,EAAAA,cAAAA,MAAAA,CAAKQ,UCnBgB,uCDmBiB,gBACpB,0BAAIR,EAAAA,cAAAA,IAAAA,CAAGiB,KAAK,oCAAmC,gCAGlE,C,qCEIL,IAhBgCvB,IAAuC,IAAtC,YAAEwB,EAAW,MAAEL,EAAK,SAAEG,GAAU,EAC/D,OACEhB,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,KAAQa,GACRb,EAAAA,cAAAA,OAAAA,CAAMmB,KAAK,cAAcC,QAASF,IAClClB,EAAAA,cAAAA,OAAAA,CAAMqB,SAAS,WAAWD,QAASP,IACnCb,EAAAA,cAAAA,OAAAA,CAAMqB,SAAS,iBAAiBD,QAASF,IACzClB,EAAAA,cAAAA,OAAAA,CAAMqB,SAAS,UAAUD,QAAQ,YACjCpB,EAAAA,cAAAA,OAAAA,CAAMmB,KAAK,eAAeC,QAAQ,YAClCpB,EAAAA,cAAAA,OAAAA,CAAMmB,KAAK,gBAAgBC,QAASP,IACpCb,EAAAA,cAAAA,OAAAA,CAAMmB,KAAK,sBAAsBC,QAASF,IACzCF,EACA,C,6GCrBP,MASaM,EAAe,IAAMtB,EAAAA,cAACuB,EAAAA,EAAG,CAACV,MAAM,cAAcK,YAAY,gCAEvE,UAXsC,IAElClB,EAAAA,cAACwB,EAAAA,EAAM,KACLxB,EAAAA,cAAAA,KAAAA,KAAIA,EAAAA,cAAAA,OAAAA,CAAMQ,UAAU,aAAY,MAAS,kBACzCR,EAAAA,cAACyB,EAAAA,EAAI,M","sources":["webpack://homepage-and-blog/./src/components/feed.tsx","webpack://homepage-and-blog/./src/components/feed.module.css","webpack://homepage-and-blog/./src/components/layout.tsx","webpack://homepage-and-blog/./src/components/layout.module.css","webpack://homepage-and-blog/./src/components/seo.tsx","webpack://homepage-and-blog/./src/pages/blog/index.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport * as styles from \"./feed.module.css\"\n\ninterface FeedProps {\n  postCount?: number;\n  hidePostId?: string;\n}\n\ninterface QueryResult {\n  allMdx: {\n    nodes: {\n      frontmatter: {\n        date: string;\n        title: string;\n        slug: string;\n      }\n      id: string;\n      excerpt: string;\n    }[]\n  }\n}\n\nconst Feed: React.FC<FeedProps> = ({ postCount, hidePostId }) => {\n  const { allMdx } = useStaticQuery<QueryResult>(\n    graphql`\n      query {\n        allMdx(sort: { frontmatter: { date: DESC } }) {\n          nodes {\n            frontmatter {\n              date(formatString: \"MMMM D, YYYY\")\n              title\n              slug\n            }\n            id\n            excerpt\n          }\n        }\n      }\n    `\n  );\n\n  const renderNodes = React.useMemo(\n    () => postCount && (allMdx.nodes.length > postCount) ? allMdx.nodes.slice(0, postCount) : allMdx.nodes, \n    [allMdx, postCount]\n  );\n\n  return (\n    <>\n      {\n        renderNodes.map(node => (!hidePostId || hidePostId !== node.id) && (\n          <article key={node.id}>\n            <h3 className={styles.postName}>\n              <Link to={`/blog/${node.frontmatter.slug}`}>\n                {node.frontmatter.title}\n              </Link>\n            </h3>\n            <p className={styles.excerptText}>{node.excerpt}</p>\n            <p className={styles.postDate}>{node.frontmatter.date}</p>\n          </article>\n        ))\n      }\n      {(renderNodes.length === 0) && (\n        <h4>Nothing here yet!</h4>\n      )}\n      {(hidePostId && renderNodes.length === 1) && (\n        <h4>No other posts yet :(</h4>\n      )}\n    </>\n  )\n}\n\nexport default Feed\n","// extracted by mini-css-extract-plugin\nexport var excerptText = \"feed-module--excerptText--471b1\";\nexport var postDate = \"feed-module--postDate--213a2\";\nexport var postName = \"feed-module--postName--b6626\";","import * as React from \"react\"\nimport * as styles from \"./layout.module.css\"\nimport { Link } from \"gatsby\"\n\ninterface LayoutProps {\n  children: React.ReactNode;\n}\n\nconst Layout: React.FC<LayoutProps> = ({ children }) => (\n  <>\n    <header className={styles.navigation}>\n      <nav className={styles.navigationItems}>\n        <Link to=\"/\"><p className={styles.heading}>Nooa Lumilaakso</p></Link>\n        <Link to=\"/\">About</Link>\n        <Link to=\"/blog\">Blog</Link>\n      </nav>\n    </header>\n    <main className={styles.contentContainer}>\n      <div className={styles.content}>\n        {children}\n      </div>\n    </main>\n    <footer className={styles.footer}>\n      <div className={styles.footerContent}>\n        Hit me up â€”&gt; <em><a href=\"mailto:nooa.lumilaakso@gmail.com\">nooa.lumilaakso@gmail.com</a></em>\n      </div>\n    </footer>\n  </>\n)\n\nexport default Layout\n","// extracted by mini-css-extract-plugin\nexport var content = \"layout-module--content--2bfc1\";\nexport var contentContainer = \"layout-module--contentContainer--52ee9\";\nexport var footer = \"layout-module--footer--ad7d0\";\nexport var footerContent = \"layout-module--footerContent--53862\";\nexport var heading = \"layout-module--heading--f158c\";\nexport var navigation = \"layout-module--navigation--c0b4f\";\nexport var navigationItems = \"layout-module--navigationItems--1f4ef\";","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\n\ninterface SeoProps {\n  title: string;\n  description: string;\n  children?: React.ReactNode;\n}\n\nconst Seo: React.FC<SeoProps> = ({ description, title, children }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo;\n","import * as React from \"react\"\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport Seo from \"../../components/seo\"\nimport Layout from \"../../components/layout\"\nimport Feed from \"../../components/feed\"\n\nconst BlogPage: React.FC<PageProps> = () => {\n  return (\n    <Layout>\n      <h1><span className=\"monospace\">//</span> Read my stuff</h1>\n      <Feed/>\n    </Layout>\n  )\n}\n\nexport const Head: HeadFC = () => <Seo title=\"Nooa's Blog\" description=\"The blog of Nooa Lumilaakso\"/>\n\nexport default BlogPage\n"],"names":["_ref","postCount","hidePostId","allMdx","useStaticQuery","renderNodes","React","nodes","length","slice","map","node","id","key","className","Link","to","frontmatter","slug","title","excerpt","date","children","href","description","name","content","property","Head","Seo","Layout","Feed"],"sourceRoot":""}