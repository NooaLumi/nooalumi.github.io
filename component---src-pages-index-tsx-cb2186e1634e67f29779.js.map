{"version":3,"file":"component---src-pages-index-tsx-cb2186e1634e67f29779.js","mappings":"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","sources":["webpack://homepage-and-blog/./src/components/feed.tsx","webpack://homepage-and-blog/./src/components/feed.module.css","webpack://homepage-and-blog/./src/components/seo.tsx","webpack://homepage-and-blog/./src/hooks/use-site-metadata.tsx","webpack://homepage-and-blog/./src/components/doomguy.module.css","webpack://homepage-and-blog/./src/components/doomguy.tsx","webpack://homepage-and-blog/./src/components/profile.tsx","webpack://homepage-and-blog/./src/components/profile.module.css","webpack://homepage-and-blog/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport * as styles from \"./feed.module.css\"\n\ninterface FeedProps {\n  postCount?: number;\n  hidePostId?: string;\n}\n\ninterface QueryResult {\n  allMdx: {\n    nodes: {\n      frontmatter: {\n        date: string;\n        title: string;\n        slug: string;\n      }\n      id: string;\n      excerpt: string;\n    }[]\n  }\n}\n\nconst Feed: React.FC<FeedProps> = ({ postCount, hidePostId }) => {\n  const { allMdx } = useStaticQuery<QueryResult>(\n    graphql`\n      query {\n        allMdx(sort: { frontmatter: { date: DESC } }) {\n          nodes {\n            frontmatter {\n              date(formatString: \"MMMM D, YYYY\")\n              title\n              slug\n            }\n            id\n            excerpt\n          }\n        }\n      }\n    `\n  );\n\n  const renderNodes = React.useMemo(\n    () => postCount && (allMdx.nodes.length > postCount) ? allMdx.nodes.slice(0, postCount) : allMdx.nodes, \n    [allMdx, postCount]\n  );\n\n  return (\n    <>\n      {\n        renderNodes.map(node => (!hidePostId || hidePostId !== node.id) && (\n          <article key={node.id}>\n            <h3 className={styles.postName}>\n              <Link to={`/blog/${node.frontmatter.slug}`}>\n                {node.frontmatter.title}\n              </Link>\n            </h3>\n            <p className={styles.excerptText}>{node.excerpt}</p>\n            <p className={styles.postDate}>{node.frontmatter.date}</p>\n          </article>\n        ))\n      }\n      {(renderNodes.length === 0) && (\n        <h4>Nothing here yet!</h4>\n      )}\n      {(hidePostId && renderNodes.length === 1) && (\n        <h4>No other posts yet :(</h4>\n      )}\n    </>\n  )\n}\n\nexport default Feed\n","// extracted by mini-css-extract-plugin\nexport var excerptText = \"feed-module--excerptText--471b1\";\nexport var postDate = \"feed-module--postDate--213a2\";\nexport var postName = \"feed-module--postName--b6626\";","import * as React from \"react\"\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\"\n\ninterface SeoProps {\n  title?: string;\n  description?: string;\n  pathname?: string;\n  children?: React.ReactNode;\n}\n\nconst Seo: React.FC<SeoProps> = ({title, description, pathname, children}) => {\n  const { title: defaultTitle, description: defaultDescription, siteUrl } = useSiteMetadata()\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`\n  }\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:locale\" content=\"en_FI\" />\n      <meta name=\"google-site-verification\" content=\"xUcUZTKNJE05sOB3nDI6HRucWFe3TY-cBmKRnPWZNKs\" />\n      { pathname === undefined && (\n        <>\n          <meta property=\"og:image\" content={`${siteUrl}/nooa_lumilaakso_profile_picture.jpg`} />\n          <meta property=\"og:image:type\" content=\"image/jpg\" />\n          <meta property=\"og:image:width\" content=\"1342\" />\n          <meta property=\"og:image:height\" content=\"1342\" />\n        </>\n      )}\n      { pathname?.startsWith('/blog') && (\n        <>\n          <meta name=\"author\" content=\"Nooa Lumilaakso\"></meta>\n        </>\n      )}\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <link rel=\"icon\" type=\"image/x-icon\" href={`${siteUrl}/favicon.ico`} />\n      <script type=\"application/ld+json\">\n        {`\n          {\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"Person\",\n            \"url\": \"https://nooalumi.github.io\",\n            \"description\": \"A 22-year-old Full-Stack Web Developer with a passion for technology and creative problem-solving.\",\n            \"name\": \"Nooa Lumilaakso\",\n            \"givenName\": \"Nooa\",\n            \"jobTitle\": \"Full-Stack Web Developer\",\n            \"sameAs\": [\n              \"https://www.linkedin.com/in/nooa-lumilaakso-212581243/\"\n            ],\n            \"knowsLanguage\": [\n              \"English\",\n              \"Finnish\"\n            ],\n            \"email\": \"nooa.lumilaakso@gmail.com\",\n            \"gender\": \"Male\"\n          }\n        `}\n      </script>\n      {children}\n    </>\n  )\n}\n\nexport default Seo;\n","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          siteUrl\n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}\n","// extracted by mini-css-extract-plugin\nexport var hurt = \"doomguy-module--hurt--652b3\";\nexport var image = \"doomguy-module--image--8113f\";\nexport var imageBase = \"doomguy-module--imageBase--b9c37\";\nexport var imageContainer = \"doomguy-module--imageContainer--26cab\";\nexport var imageHidden = \"doomguy-module--imageHidden--119d1\";","import React from \"react\";\nimport { useEffect, useState } from \"react\"\nimport * as styles from \"./doomguy.module.css\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\ntype ImageIndex = 0 | 1 | 2 | 3;\n\nconst Doomguy: React.FC = () => {\n  const [imageIndex, setImageIndex] = useState<ImageIndex>(0);\n  const [isHurt, setIsHurt] = useState(false);\n\n  // Toggle screen red when isHurt\n  useEffect(() => {\n    document.body.classList[isHurt ? \"add\" : \"remove\"](styles.hurt);\n    return () => document.body.classList.remove(styles.hurt);\n  }, [isHurt]);\n\n  // Switch image at intervals and clear isHurt\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setImageIndex(imageIndex === 3 ? 0 : imageIndex + 1 as ImageIndex);\n      setIsHurt(false);\n    }, 600);\n    \n    return () => clearInterval(interval);\n  }), [];\n\n  return (\n    <div className={styles.imageContainer} onClick={() => setIsHurt(true)} aria-hidden={true}> {/* I imagine a screenreader would be confused lmao */}\n      <StaticImage\n      className={`${styles.image} ${styles.imageBase} ${imageIndex > 1 ? ' ' + styles.imageHidden : ''}`}\n      alt=\"Male face looking forwards\"\n      src=\"../images/nocrawl/face_forwards.png\"\n      />\n      <StaticImage\n      className={`${styles.image} ${imageIndex !== 2 ? ' ' + styles.imageHidden : ''}`}\n      alt=\"Male face looking left\"\n      src=\"../images/nocrawl/face_left.png\"\n      />\n      <StaticImage\n      className={`${styles.image} ${imageIndex !== 3 ? ' ' + styles.imageHidden : ''}`}\n      alt=\"Male face looking right\"\n      src=\"../images/nocrawl/face_right.png\"\n      />\n      <StaticImage\n      className={`${styles.image} ${isHurt === false ? ' ' + styles.imageHidden : ''}`}\n      alt=\"Male face looking angry\"\n      src=\"../images/nocrawl/face_hurt.png\"\n      />\n    </div>\n  );\n}\n\nexport default Doomguy\n","import React from \"react\";\nimport * as styles from \"./profile.module.css\"\nimport Doomguy from \"./doomguy\"\nimport Socials from \"./socials\"\n\nconst Profile: React.FC = () => {\n  return (\n    <div className={styles.info}>\n      <Doomguy/>\n      <div>\n        Hello! My name is Nooa, and I do programming and a bunch of other cool <span className=\"no-wrap-text\">stuff <span className=\"fire-icon\">🔥</span></span>\n        <br/>\n        <Socials/>\n      </div>\n    </div>\n  );\n}\n\nexport default Profile \n","// extracted by mini-css-extract-plugin\nexport var info = \"profile-module--info--07a02\";","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport Seo from \"../components/seo\"\nimport Layout from \"../components/layout\"\nimport Profile from \"../components/profile\"\nimport Feed from \"../components/feed\"\nimport DoomText, {DoomTextOption} from \"../components/doomtext\"\n\nconst IndexPage: React.FC<PageProps> = () => {\n  return (\n    <Layout>\n      <Profile/>\n      <DoomText doomText={DoomTextOption.ThingsILike}/>\n      <ul className=\"list-fun\">\n        {/* <li><a href=\"https://www.youtube.com/watch?v=ZSRHeXYDLko\">This talk</a> by Jonathan Blow on how software degrades over time</li> */}\n        <li><a href=\"https://www.poetry.com/poem/105446/what-is-the-price-of-experience%3F\" title=\"What is the Price of Experience? by William Blake\">This poem</a> by William Blake</li>\n        <li><a href=\"https://www.gog.com/en/game/terraria\" title=\"GOG - Terraria\">Terraria</a> by Re-Logic and <a href=\"https://www.gog.com/game/Prey\" title=\"GOG - Prey\">Prey</a> by Arkane Austin (RIP)</li>\n        <li>Maybe a quarter of the reciprocal of 1 ÷ 16 of my four siblings</li>\n        <li><a href=\"https://www.youtube.com/watch?v=4XeeIFsysK4&list=PLgtvGkabBTggcwXCMx7hyeVJ_D0GyNPGw\" title=\"Youtube - May Our Chambers Be Full by Thou & Emma Ruth Rundle\">This album</a> by Thou & Emma Ruth Rundle</li>\n        <li><a href=\"https://www.goodreads.com/book/show/103761.Zen_in_the_Art_of_Writing\" title=\"Goodreads - Zen in the Art of Writing by Ray Bradbury\">This book</a> on writing by Ray Bradbury, and <a href=\"https://www.goodreads.com/book/show/103758.Zen_in_the_Art_of_Archery\" title=\"Goodreads - Zen in the Art of Archery by Eugen Herrigel\">its namesake</a> by Eugen Herrigel</li>\n        <li><a href=\"https://neovim.io/\" title=\"Neovim\">VIM</a> (suck it, Emacs)</li>\n        <li>The only <a href=\"https://www.amazon.com/Kindle-Paperwhite-10th-Gen-Built/dp/B09BW9Y2L2\" title=\"Amazon - Kindle Paperwhite 10th Gen\">perfect piece of hardware</a> in existence (the software still sucks)</li>\n        <li>The live version of <a href=\"https://www.youtube.com/watch?v=iz8m9sL8FUQ\" title=\"Youtube - The Wholly Ghost (live) by King Gizzard\">this King Gizzard song</a></li>\n        <li><a href=\"https://www.goodreads.com/book/show/23754.The_Sandman_Vol_1\" title=\"Goodreads - The Sandman VOl 1 by Neil Gaiman\">This comic book series</a> by Neil Gaiman et al.</li>\n        {/* <li>The <a href=\"https://youtu.be/LuKGGz-0Q7s\">opening theme</a> of Space Dandy</li> */}\n        {/* <li>Amateur Calisthenics so I can say I exercise</li> */}\n        <li><a href=\"https://www.codedojo.com/?p=1620\" title=\"Two guys made an MMO: The Growtopia Postmortem by Seth A. Robinson\">This article</a> by Seth A. Robinson about how he and Mike Hommel made a mobile MMO game back in 2012</li>\n        <li><a href=\"https://www.youtube.com/watch?v=gBu77h2FSCM\" title=\"Youtube - RetroAhoy: X-COM by Ahoy\">This video</a> by Ahoy about the X-COM fanchise</li>\n        <li><a href=\"https://www.youtube.com/watch?v=yuxss1kBQWw\" title=\"Youtube - Private Life by Oingo Boingo\">This music video</a> by Oingo Boingo</li>\n        <li><a href=\"https://commons.wikimedia.org/wiki/File:Dammen_p%C3%A5_Kloumann-sj%C3%B8en_(The_dam_at_Lake_Klouman),_1908.jpg\" title=\"Wikipedia Commons - Dammen på Kloumann-sjøen by Theodor Kittelsen\">This painting</a> by Theodor Kittelsen</li>\n        <li>TLDR: Cool stuff and the people that make it</li>\n      </ul>\n      <br/>\n      <DoomText doomText={DoomTextOption.CheckoutMyBlog}/>\n      <Feed postCount={3} />\n      <Link to=\"/blog\" className=\"button button-outline button-main\">See all posts</Link>\n    </Layout>\n  )\n}\n\nexport const Head: HeadFC = () => <Seo title=\"Nooa's Homepage\"/>\n\nexport default IndexPage\n"],"names":["_ref","postCount","hidePostId","allMdx","useStaticQuery","renderNodes","React","nodes","length","slice","map","node","id","key","className","Link","to","frontmatter","slug","title","excerpt","date","description","pathname","children","defaultTitle","defaultDescription","siteUrl","site","siteMetadata","seo","url","name","content","property","undefined","startsWith","rel","type","href","hurt","imageHidden","Doomguy","imageIndex","setImageIndex","useState","isHurt","setIsHurt","useEffect","document","body","classList","styles","remove","interval","setInterval","clearInterval","onClick","StaticImage","alt","src","Profile","Socials","Head","Seo","IndexPage","Layout","DoomText","doomText","DoomTextOption","ThingsILike","CheckoutMyBlog","Feed"],"sourceRoot":""}