{"version":3,"file":"component---src-pages-blog-index-tsx-73bf73809006a431dc21.js","mappings":"mLA0EA,MAlDkCA,IAA+B,IAA9B,UAAEC,EAAS,WAAEC,GAAY,EAC1D,MAAM,OAAEC,IAAWC,EAAAA,EAAAA,IAAc,WAmB3BC,EAAcC,EAAAA,SAClB,IAAML,GAAcE,EAAOI,MAAMC,OAASP,EAAaE,EAAOI,MAAME,MAAM,EAAGR,GAAaE,EAAOI,OACjG,CAACJ,EAAQF,IAGX,OACEK,EAAAA,cAAAA,EAAAA,SAAAA,KAEID,EAAYK,KAAIC,KAAUT,GAAcA,IAAeS,EAAKC,KAC1DN,EAAAA,cAAAA,UAAAA,CAASO,IAAKF,EAAKC,IACjBN,EAAAA,cAAAA,KAAAA,CAAIQ,UCnDM,gCDoDRR,EAAAA,cAACS,EAAAA,GAAI,CAACC,GAAI,SAASL,EAAKM,YAAYC,QACjCP,EAAKM,YAAYE,QAGtBb,EAAAA,cAAAA,IAAAA,CAAGQ,UC1DU,mCD0DsBH,EAAKS,SAAWT,EAAKM,YAAYI,aACpEf,EAAAA,cAAAA,IAAAA,CAAGQ,UC1DO,gCD0DsBH,EAAKM,YAAYK,SAI9B,IAAvBjB,EAAYG,QACZF,EAAAA,cAAAA,KAAAA,KAAI,qBAEJJ,GAAqC,IAAvBG,EAAYG,QAC1BF,EAAAA,cAAAA,KAAAA,KAAI,yBAEL,C,8EESP,MApEgCN,IAA6D,IAA5D,MAACmB,EAAK,YAAEE,EAAW,SAAEE,EAAQ,SAAEC,EAAQ,cAAEC,GAAc,EACtF,MAAQN,MAAOO,EAAcL,YAAaM,EAAkB,QAAEC,ICTjDxB,EAAAA,EAAAA,IAAe,cAYhByB,KAAKC,aDDXC,EAAM,CACVZ,MAAOA,GAASO,EAChBL,YAAaA,GAAeM,EAC5BK,IAAK,GAAGJ,IAAUL,GAAY,MAGhC,OACEjB,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,KAAQyB,EAAIZ,OACZb,EAAAA,cAAAA,OAAAA,CAAM2B,KAAK,cAAcC,QAASH,EAAIV,cACtCf,EAAAA,cAAAA,OAAAA,CAAM6B,SAAS,WAAWD,QAASH,EAAIZ,QACvCb,EAAAA,cAAAA,OAAAA,CAAM6B,SAAS,iBAAiBD,QAASH,EAAIV,cAC7Cf,EAAAA,cAAAA,OAAAA,CAAM6B,SAAS,YAAYD,QAAQ,UACnC5B,EAAAA,cAAAA,OAAAA,CAAM2B,KAAK,2BAA2BC,QAAQ,qDAC/BE,IAAbb,GACAjB,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,OAAAA,CAAM6B,SAAS,WAAWD,QAAS,GAAGN,0CACtCtB,EAAAA,cAAAA,OAAAA,CAAM6B,SAAS,gBAAgBD,QAAQ,cACvC5B,EAAAA,cAAAA,OAAAA,CAAM6B,SAAS,iBAAiBD,QAAQ,SACxC5B,EAAAA,cAAAA,OAAAA,CAAM6B,SAAS,kBAAkBD,QAAQ,UAG3CX,SAAAA,EAAUc,WAAW,WAAYd,aAAQ,EAARA,EAAUf,QAAS,EACpDF,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,OAAAA,CAAM6B,SAAS,UAAUD,QAAQ,YACjC5B,EAAAA,cAAAA,OAAAA,CAAM2B,KAAK,SAASC,QAAQ,oBAC5B5B,EAAAA,cAAAA,OAAAA,CAAM6B,SAAS,iBAAiBD,QAAQ,yBACpBE,IAAlBX,GAAgCnB,EAAAA,cAAAA,OAAAA,CAAM6B,SAAS,yBAAyBD,QAAST,IACnFnB,EAAAA,cAAAA,OAAAA,CAAM6B,SAAS,WAAWD,QAASH,EAAIZ,SAGvCb,EAAAA,cAAAA,OAAAA,CAAM6B,SAAS,UAAUD,QAAQ,YAErC5B,EAAAA,cAAAA,OAAAA,CAAM2B,KAAK,eAAeC,QAAQ,YAClC5B,EAAAA,cAAAA,OAAAA,CAAM2B,KAAK,gBAAgBC,QAASH,EAAIZ,QACxCb,EAAAA,cAAAA,OAAAA,CAAM2B,KAAK,sBAAsBC,QAASH,EAAIV,cAC9Cf,EAAAA,cAAAA,OAAAA,CAAM2B,KAAK,cAAcC,QAASH,EAAIC,MACtC1B,EAAAA,cAAAA,OAAAA,CAAMgC,IAAI,OAAOC,KAAK,eAAeC,KAAM,GAAGZ,kBAC9CtB,EAAAA,cAAAA,SAAAA,CAAQiC,KAAK,uBACV,+sBAqBFf,EACA,C,sHEpEP,MASaiB,EAAeA,IAAMnC,EAAAA,cAACoC,EAAAA,EAAG,CAACvB,MAAM,cAAcE,YAAY,iBAAiBE,SAAS,UAEjG,UAXsCoB,IAElCrC,EAAAA,cAACsC,EAAAA,EAAM,KACLtC,EAAAA,cAACuC,EAAAA,EAAQ,CAACC,SAAUC,EAAAA,EAAeC,cACnC1C,EAAAA,cAAC2C,EAAAA,EAAI,M","sources":["webpack://homepage-and-blog/./src/components/feed.tsx","webpack://homepage-and-blog/./src/components/feed.module.css","webpack://homepage-and-blog/./src/components/seo.tsx","webpack://homepage-and-blog/./src/hooks/use-site-metadata.tsx","webpack://homepage-and-blog/./src/pages/blog/index.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport * as styles from \"./feed.module.css\"\n\ninterface FeedProps {\n  postCount?: number;\n  hidePostId?: string;\n}\n\ninterface QueryResult {\n  allMdx: {\n    nodes: {\n      frontmatter: {\n        date: string;\n        title: string;\n        description: string;\n        slug: string;\n      }\n      id: string;\n      excerpt: string;\n    }[]\n  }\n}\n\nconst Feed: React.FC<FeedProps> = ({ postCount, hidePostId }) => {\n  const { allMdx } = useStaticQuery<QueryResult>(\n    graphql`\n      query {\n        allMdx(sort: { frontmatter: { date: DESC } }) {\n          nodes {\n            frontmatter {\n              date(formatString: \"MMMM D, YYYY\")\n              title\n              description\n              slug\n            }\n            id\n            excerpt\n          }\n        }\n      }\n    `\n  );\n\n  const renderNodes = React.useMemo(\n    () => postCount && (allMdx.nodes.length > postCount) ? allMdx.nodes.slice(0, postCount) : allMdx.nodes, \n    [allMdx, postCount]\n  );\n\n  return (\n    <>\n      {\n        renderNodes.map(node => (!hidePostId || hidePostId !== node.id) && (\n          <article key={node.id}>\n            <h3 className={styles.postName}>\n              <Link to={`/blog/${node.frontmatter.slug}`}>\n                {node.frontmatter.title}\n              </Link>\n            </h3>\n            <p className={styles.excerptText}>{node.excerpt || node.frontmatter.description}</p>\n            <p className={styles.postDate}>{node.frontmatter.date}</p>\n          </article>\n        ))\n      }\n      {(renderNodes.length === 0) && (\n        <h4>Nothing here yet!</h4>\n      )}\n      {(hidePostId && renderNodes.length === 1) && (\n        <h4>No other posts yet :(</h4>\n      )}\n    </>\n  )\n}\n\nexport default Feed\n","// extracted by mini-css-extract-plugin\nexport var excerptText = \"feed-module--excerptText--471b1\";\nexport var postDate = \"feed-module--postDate--213a2\";\nexport var postName = \"feed-module--postName--b6626\";","import * as React from \"react\"\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\"\n\ninterface SeoProps {\n  title?: string;\n  description?: string;\n  publishedDate?: string;\n  pathname?: string;\n  children?: React.ReactNode;\n}\n\nconst Seo: React.FC<SeoProps> = ({title, description, pathname, children, publishedDate}) => {\n  const { title: defaultTitle, description: defaultDescription, siteUrl } = useSiteMetadata()\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`\n  }\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:locale\" content=\"en_FI\" />\n      <meta name=\"google-site-verification\" content=\"xUcUZTKNJE05sOB3nDI6HRucWFe3TY-cBmKRnPWZNKs\" />\n      { pathname === undefined && (\n        <>\n          <meta property=\"og:image\" content={`${siteUrl}/nooa_lumilaakso_profile_picture.jpg`} />\n          <meta property=\"og:image:type\" content=\"image/jpg\" />\n          <meta property=\"og:image:width\" content=\"1342\" />\n          <meta property=\"og:image:height\" content=\"1342\" />\n        </>\n      )}\n      { pathname?.startsWith('/blog') && pathname?.length > 6 ? (\n        <>\n          <meta property=\"og:type\" content=\"article\" />\n          <meta name=\"author\" content=\"Nooa Lumilaakso\" />\n          <meta property=\"article:author\" content=\"Nooa Lumilaakso\" />\n          { publishedDate !== undefined && (<meta property=\"article:published_time\" content={publishedDate} />) }\n          <meta property=\"headline\" content={seo.title} />\n        </>\n      ) : (\n          <meta property=\"og:type\" content=\"website\" />\n      )}\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <link rel=\"icon\" type=\"image/x-icon\" href={`${siteUrl}/favicon.ico`} />\n      <script type=\"application/ld+json\">\n        {`\n          {\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"Person\",\n            \"url\": \"https://nooalumi.github.io\",\n            \"description\": \"A 22-year-old Full-Stack Web Developer with a passion for technology and creative problem-solving.\",\n            \"name\": \"Nooa Lumilaakso\",\n            \"givenName\": \"Nooa\",\n            \"jobTitle\": \"Full-Stack Web Developer\",\n            \"sameAs\": [\n              \"https://www.linkedin.com/in/nooa-lumilaakso-212581243/\"\n            ],\n            \"knowsLanguage\": [\n              \"English\",\n              \"Finnish\"\n            ],\n            \"email\": \"nooa.lumilaakso@gmail.com\",\n            \"gender\": \"Male\"\n          }\n        `}\n      </script>\n      {children}\n    </>\n  )\n}\n\nexport default Seo;\n","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          siteUrl\n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}\n","import * as React from \"react\"\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport Seo from \"../../components/seo\"\nimport Layout from \"../../components/layout\"\nimport Feed from \"../../components/feed\"\nimport DoomText, {DoomTextOption} from \"../../components/doomtext\"\n\nconst BlogPage: React.FC<PageProps> = () => {\n  return (\n    <Layout>\n      <DoomText doomText={DoomTextOption.ReadMyStuff}/>\n      <Feed/>\n    </Layout>\n  )\n}\n\nexport const Head: HeadFC = () => <Seo title=\"Nooa's Blog\" description=\"Read My Stuff!\" pathname=\"/blog\"/>\n\nexport default BlogPage\n"],"names":["_ref","postCount","hidePostId","allMdx","useStaticQuery","renderNodes","React","nodes","length","slice","map","node","id","key","className","Link","to","frontmatter","slug","title","excerpt","description","date","pathname","children","publishedDate","defaultTitle","defaultDescription","siteUrl","site","siteMetadata","seo","url","name","content","property","undefined","startsWith","rel","type","href","Head","Seo","BlogPage","Layout","DoomText","doomText","DoomTextOption","ReadMyStuff","Feed"],"sourceRoot":""}